using System;
using System.Windows.Forms;
using System.Runtime.InteropServices;

namespace FingerScreensaver
{
    internal static class Program
    {
        // Windows API –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–∫–Ω–∞–º–∏
        [DllImport("user32.dll")]
        private static extern IntPtr SetParent(IntPtr hWndChild, IntPtr hWndNewParent);

        [DllImport("user32.dll")]
        private static extern int SetWindowPos(IntPtr hWnd, IntPtr hWndInsertAfter, int X, int Y, int cx, int cy, uint uFlags);

        [DllImport("user32.dll")]
        private static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);

        private const uint SWP_NOZORDER = 0x0004;
        private const uint SWP_NOACTIVATE = 0x0010;
        private const int SW_SHOW = 5;
        /// <summary>
        /// –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        /// </summary>
        [STAThread]
        static void Main(string[] args)
        {
            ApplicationConfiguration.Initialize();

            // –†–∞–∑–±–æ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
            if (args.Length > 0)
            {
                string command = args[0].ToLower().Trim();
                
                // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –¥–≤–∞ —Å–∏–º–≤–æ–ª–∞ (–º–æ–≥—É—Ç –±—ã—Ç—å /s, -s, /c, -c –∏ —Ç.–¥.)
                if (command.Length > 1)
                {
                    command = command.Substring(0, 2);
                }

                switch (command)
                {
                    case "/s": // –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–Ω—Å–µ–π–≤–µ—Ä–∞
                    case "-s":
                        Application.Run(new ScreensaverForm(false));
                        break;

                    case "/p": // –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                    case "-p":
                        // –î–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∏–Ω–∏–∞—Ç—é—Ä—É
                        if (args.Length > 1 && int.TryParse(args[1], out int parentHandle))
                        {
                            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è –≤ –¥–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫
                            var previewForm = new ScreensaverForm(true);
                            
                            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ –æ–∫–Ω–æ
                            SetParent(previewForm.Handle, new IntPtr(parentHandle));
                            
                            // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –æ–∫–Ω–æ –≤–Ω—É—Ç—Ä–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ
                            SetWindowPos(previewForm.Handle, IntPtr.Zero, 0, 0, 320, 240, 
                                SWP_NOZORDER | SWP_NOACTIVATE);
                            
                            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ
                            ShowWindow(previewForm.Handle, SW_SHOW);
                            
                            // –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–æ–ª—å–∫–æ –¥–ª—è —ç—Ç–æ–≥–æ –æ–∫–Ω–∞
                            Application.Run(previewForm);
                        }
                        else
                        {
                            // –ï—Å–ª–∏ –Ω–µ—Ç —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–∫–Ω–∞, –ø—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º
                            return;
                        }
                        break;

                    case "/c": // –ù–∞—Å—Ç—Ä–æ–π–∫–∏
                    case "-c":
                        // –£ –Ω–∞—Å –Ω–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        MessageBox.Show(
                            "–≠—Ç–æ—Ç —Å–∫—Ä–∏–Ω—Å–µ–π–≤–µ—Ä –Ω–µ –∏–º–µ–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫.\n\n–ü—Ä–æ—Å—Ç–æ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —ç—Ñ—Ñ–µ–∫—Ç–æ–º –∑–≤–µ–∑–¥–Ω–æ–≥–æ —Ç—É–Ω–µ–ª—è! üñï",
                            "Finger Screensaver",
                            MessageBoxButtons.OK,
                            MessageBoxIcon.Information
                        );
                        break;

                    default:
                        // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ - –∑–∞–ø—É—Å–∫–∞–µ–º –æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º
                        Application.Run(new ScreensaverForm(false));
                        break;
                }
            }
            else
            {
                // –ë–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ - –∑–∞–ø—É—Å–∫–∞–µ–º –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ
                Application.Run(new ScreensaverForm(false));
            }
        }
    }
}